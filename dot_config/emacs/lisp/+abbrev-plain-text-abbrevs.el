;;; +abbrev-plain-text-abbrevs.el -*- lexical-binding: t; -*-
;;
;; Copyright (c) 2024 Free Software Foundation, Inc.
;;
;; Author: Luis Henriquez-Perez <luis@luishp.xyz>
;; Homepage: https://github.com/Luis-Henriquez-Perez/dotfiles/
;;
;; This file is not part of GNU Emacs.
;;
;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation, either version 3 of the
;; License, or (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful, but
;; WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
;; General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program. If not, see <http://www.gnu.org/licenses/>.
;;
;;; Commentary:
;;
;; Define my abbrevs for plain text.  I say plain text instead of "text-mode"
;; because these abbrevs can be active in modes that are not text mode or
;; derived from text-mode.  For example, in comments and strings.
;;
;;; Code:
(require 'base)
(require 'abbrev)
(require '+abbrev-enable-functions)
(require '+abbrev-wikipedia-typo-abbrevs)

(define-abbrev global-abbrev-table "parti"          "particular"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sh"             "should have"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "desb"           "describe"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "efficl"         "efficiently"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rath"           "rather"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "experd"         "experienced"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "exper"          "experience"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hol"            "honestly"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hon"            "honest"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ofo"            "off of"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "juust"          "just"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "atst"           "at the same time"              nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "abbrevx"        "abbrevs"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "oos"            "out of scope"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ano"            "another"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "woud"           "would"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hty"            "they"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "theve"          "they have"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "theyve"         "they have"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lok"            "look"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "implemed"       "implemented"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "evals"          "evaluates"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ih"             "I have"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "implementd"     "implemented"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "esear"          "easier"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ezer"           "easier"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ezr"            "easier"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "persp"          "perspective"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "seve"           "several"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sence"          "sense"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "reffed"         "referenced"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "menual"         "manual"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "pakckage"       "package"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "relize"         "realize"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "relized"        "realized"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "templat"        "template"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "templ"          "template"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "unfort"         "unfortunately"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "floabn"         "for lack of a better name"     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "thots"          "thoughts"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mb"             "maybe"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ikt"            "I know that"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "decis"          "decision"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "atp"            "at that point"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "somethign"      "something"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "evalate"        "evaluate"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "forst"          "first"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "itk"            "I think"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "loc"            "location"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "al"             "at least"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "al"             "at least"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tresti"         "intresting"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ntax"           "syntax"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "intres"         "interest"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "intres"         "interest"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "taged"          "tagged"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "remed"          "removed"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "neces"          "necessary"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nec"            "necessary"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "kws"            "keywords"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "kw"             "keyword"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mulitple"       "multiple"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "iiee"           "It is easy enough"             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mab"            "maybe"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "automl"         "automatically"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "auotml"         "automatically"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "enalbed"        "enabled"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "unples"         "unpleasant"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hk"             "hook"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "toda"           "today"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aloading"       "autoloading"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "shoud"          "should"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dong"           "doing"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wordd"          "word"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; Note that wether is actually a word meaning "a castrated male sheep or goat"
;; but I do not expect to be using this word at all.  I expect 99% of the time
;; that when I use it I will actually mean whether.
(define-abbrev global-abbrev-table "wether"         "whether"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "effici"         "efficient"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "situ"           "situation"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sepd"           "separated"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ihh"            "I have had"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "reme"           "remember"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "remem"          "remember"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hile"           "while"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "menas"          "means"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "equv"           "equivalent"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "importnat"      "important"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "attentin"       "attention"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "execessivly"    "excessively"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bultin"         "built-in"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "exampl"         "example"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "alre"           "already"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wrot"           "wrote"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wrte"           "wrote"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "soemties"       "sometimes"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "upate"          "update"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "itd"            "it would"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "enginnering"    "engineering"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lang"           "language"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "langs"          "languages"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dspite"         "despite"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "diespite"       "despite"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aboive"         "above"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "chaning"        "changing"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "os"             "operating system"              nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "potenl"         "potentially"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dependant"      "dependent"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wever"          "wherever"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "loadng"         "loading"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "soruc"          "source"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "writi"          "writing"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "msgs"           "messages"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "anym"           "anymore"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "anymo"          "anymore"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "alwas"          "always"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "remov"          "remove"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "iddnt"          "did not"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "expressoins"    "expressions"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "regexes"        "regular expressions"           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "semed"          "seemed"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "capture"        "capture"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "messag"         "message"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rignt"          "right"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "crating"        "creating"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "preciese"       "precise"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "narrowng"       "narrowing"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "temped"         "tempted"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "headlne"        "headline"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "versoin"        "version"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "talkinb"        "talking"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "opts"           "options"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mentin"         "mention"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "shod"           "should"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "availa"         "available"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wiw"            "What is worse"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "varients"       "variants"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "updae"          "update"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "enabe"          "enable"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "commen"         "common"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "simples"        "simplest"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "thereofre"      "therefore"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ecape"          "escape"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "coud"           "could"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "replacment"     "replacement"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "applic"         "application"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lsip"           "lisp"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "txt"            "text"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "impo"           "important"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "vry"            "every"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "defini"         "definition"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bindngs"        "bindings"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "regexps"        "regular expression"            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "alty"           "Alternatively"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "albeti"         "albeit"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bookmarkd"      "bookmarked"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "whatev"         "whatever"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "simplyfing"     "simplifying"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "satisfiying"    "satisfying"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "chara"          "character"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "interediary"    "intermediary"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "agan"           "again"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "spefically"     "specifically"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "certa"          "certain"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "godod"          "good"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wlel"           "well"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "temporl"        "temporarily"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "prob"           "probably"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bookms"         "bookmarks"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "anythig"        "anything"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "boookmark"      "bookmark"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sess"           "session"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bookmaks"       "bookmarks"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "supp"           "support"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "betw"           "between"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tat"            "that"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "arbi"           "arbitrary"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "regiser"        "register"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "afaict"         "as far as I can tell"          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "writig"         "writing"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "thme"           "them"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nesly"          "necessarily"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "enof"           "enough"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "andto"          "and to"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mins"           "minutes"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "happengin"      "happening"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tme"            "time"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sente"          "sentence"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "begi"           "beginning"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aroudn"         "around"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "xpansion"       "expansion"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nt"             "not"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "entier"         "entire"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "unfor"          "unfortunately"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "applicatioin"   "application"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dirs"           "directories"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "avg"            "average"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aleady"         "already"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "happ"           "happy"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "capitalizatoin" "capitalization"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "anem"           "name"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "contrl"         "control"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "jumpt"          "jump to"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "thatt"          "that"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lcoation"       "location"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "settingns"      "settings"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "recom"          "recommended"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "unwiedly"       "unwieldy"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bufer"          "buffer"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "takin"          "taking"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bookmakr"       "bookmark"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "thatd"          "that would"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "delimeter"      "delimiter"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "defualt"        "default"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "creae"          "create"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "reqs"           "requirements"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mabe"           "maybe"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ti"             "it"                            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bufers"         "buffers"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bookmakrs"      "bookmarks"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ais"            "as it stands,"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ais"            "as it stands"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "frmae"          "frame"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "somehwo"        "somehow"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wa"             "way"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "advisig"        "advising"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "inadvertedly"   "inadvertently"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aamof"          "as a matter of fact"           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "eamcs"          "emacs"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "oep"            "open"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tendencis"      "tendencies"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "magitcal"       "magical"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "perosnally"     "personally"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "successfullyy"  "successfully"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "thatss"         "that is"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nwo"            "now"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "determne"       "determine"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "abbreviatons"   "abbreviations"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "norml"          "normal"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "inappripriate"  "inappropriate"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "enalbe"         "enable"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "realestate"     "real-estate."                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "scrreen"        "screen"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "prop"           "property"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rfine"          "refine"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "previosu"       "previous"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ther"           "there"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rote"           "wrote"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "partl"          "partly"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ro"             "or"                            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "abbrrevs"       "abbrevs"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sev"            "several"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "procise"        "precise"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "whenn"          "when"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rounda"         "roundabout"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lisence"        "license"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "liscence"       "license"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "generatioin"    "generation"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "divishion"      "division"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "simialr"        "similar"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cmnt"           "comment"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "whites"         "whitespace"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dup"            "duplicate"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dupli"          "duplicate"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "commentar"      "commentary"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ppress"         "press"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "keybs"          "keybindings"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "reqed"          "required"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "examinging"     "examining"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "functinos"      "functions"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "iuwt"           "if you want to"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "eval"           "evaluate"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "teating"        "treating"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "abbort"         "abort"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "essntially"     "essentially"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "functoins"      "functions"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "loeaded"        "loaded"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "appropr"        "appropriate"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "pt"             "point"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "befo"           "before"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ottomh"         "off the top of my head"        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "anon"           "anonymous"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "gening"         "generating"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aoy"            "as of yet"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sillence"       "silence"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "updadte"        "update"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rnadom"         "random"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "deps"           "dependencies"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "req"            "requirement"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "udate"          "update"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cnfig"          "configuration"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "orners"         "corners"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sometiems"      "sometimes"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "abstractioins"  "abstractions"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "capt"           "captain"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "loadingn"       "loading"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "shoudnt"        "should not"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "actu"           "actually"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lke"            "like"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tother"         "together"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "usng"           "using"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "advoid"         "avoid"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bytecomp"       "byte-compilation"              nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dupl"           "duplicate"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "err"            "error"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "repeateadly"    "repeatedly"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wtim"           "with this in mind"             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dingly"         "accordingly"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ued"            "used"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "consice"        "concise"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "doenst"         "does not"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "descr"          "description"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "vai"            "via"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "laoded"         "loaded"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mprove"         "improve"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "errs"           "errors"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "vals"           "values"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "env"            "environment"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fomr"           "form"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "upadte"         "update"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "deling"         "deleting"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "inst"           "instead"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "abrevs"         "abbreviations"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cpies"          "copies"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "memor"          "memory"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mch"            "much"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "durat"          "duration"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "buidls"         "builds"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "asb"            "as specified by"               nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "defering"       "deferring"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "temr"           "term"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "exs"            "examples"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "suport"         "support"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "oftne"          "often"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nl"             "newline"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "packae"         "package"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cmnts"          "comments"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lata"           "later"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ifo"            "in favor of"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "thes"           "these"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "prelim"         "preliminary"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "buff"           "buffer"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "raied"          "raised"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cmt"            "comment"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rased"          "raised"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "boudn"          "bound"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "commnt"         "comment"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "commendt"       "comment"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hnl"            "honestly"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "textobj"        "text-object"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "kbds"           "keybindings"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "canceled"       "cancelled"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ins"            "insert"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bds"            "bindings"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bd"             "binding"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "kbd"            "keybinding"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cmds"           "commands"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cmd"            "command"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ae"             "are"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "gral"           "general"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "progrress"      "progress"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "perf"           "perfect"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "separ"          "separate"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mgs"            "message"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wrld"           "world"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wich"           "which"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "msg"            "message"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mesage"         "message"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sems"           "seems"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rem"            "remove"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bod"            "body"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "defing"         "defining"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "awkard"         "akward"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "recos"          "recommends"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "binds"          "bindings"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nd"             "and"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "approp"         "appropriate"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aprop"          "appropriate"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lexi"           "lexicographically"             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "econfig"        "Emacs configuration"           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "consec"         "consecutive"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "conseq"         "consequence"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "paces"          "spaces"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "beh"            "behavior"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "comnt"          "comment"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "keybind"        "keybinding"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "kbind"          "keybinding"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "keybinds"       "keybindings"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "kbinds"         "keybindings"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; ("abbrevs"                                      "abbreviations")
;; ("abbrev"                                       "abbreviation")
(define-abbrev global-abbrev-table "bcomp"          "byte-compilation"              nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "unness"         "unnecessary"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "coment"         "comment"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fror"           "for"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "stup"           "setup"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "inclinaition"   "inclination"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tring"          "trying"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wanna"          "want to"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "effor"          "effort"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "undef"          "undefined"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sym"            "symbol"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wre"            "were"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ws"             "was"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "probs"          "problems"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "syms"           "symbols"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tbs"            "that being said"               nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "evalu"          "evaluation"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "oside"          "outside"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bside"          "beside"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sumes"          "assumes"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "evaling"        "evaluating"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "res"            "result"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "src"            "source"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sytle"          "style"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "elt"            "element"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "elts"           "elements"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "gens"           "generates"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "understandibly" "understandably"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "subborn"        "stubborn"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dever"          "developer"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dev"            "development"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mgiht"          "might"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "despa"          "desparate"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "prog"           "programming"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ttit"           "the thing is that"             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tti"            "the thing is"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "paht"           "path"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "val"            "value"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "optioinal"      "optional"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "homogenous"     "homogeneous"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "awa"            "as well as"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "simul"          "simultaneously"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "simultanouesly" "simultaneously"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "struct"         "structure"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "structs"        "structures"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "acces"          "access"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "comm"           "common"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "corr"           "corresponding"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "expr"           "expression"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "builtin"        "built-in"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "elems"          "elements"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "elem"           "element"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nones"          "nonessential"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "abt"            "about"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "yt"             "youtube"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "iadt"           "in addition to this"           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tldr"           "TLDR"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mo"             "more"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "opt"            "option"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "thro"           "through"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "alowed"         "allowed"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "allowd"         "allowed"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "pefect"         "perfect"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "negy"           "negatively"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "neg"            "negative"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "eff"            "effect"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "weras"          "whereas"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fol"            "following"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "foll"           "following"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ooh"            "out of hand"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "combi"          "combination"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ingen"          "in general"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "gened"          "generated"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aload"          "autoload"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "amt"            "amount"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "amoutn"         "amount"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lvl"            "level"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cd"             "could"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cud"            "could"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "infor"          "information"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "isn"            "is not"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "thhe"           "the"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ques"           "question"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "arg"            "argument"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "equiv"          "equivalent"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mmend"          "recommend"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "del"            "delete"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "desc"           "description"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hes"            "he is"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "impressoin"     "impression"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wsa"            "was"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "var"            "variable"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "vars"           "variables"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "macroexp"       "macro expansion"               nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "coments"        "comments"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "unes"           "unnecessary"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "uness"          "unnecessary"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dk"             "do not know"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "emacss"         "Emacs's"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ess"            "essentially"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sist"           "consistent"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "initing"        "initializing"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fnames"         "filenames"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "misc"           "miscellaneous"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "imm"            "immediately"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "evv"            "everything"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "abut"           "about"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "movo"           "moreover"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dandylion"      "dandelion"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dandylions"     "dandelions"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bev"            "bird's-eye view"               nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "thot"           "thought"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tmmw"           "to make matters worse"         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "freq"           "frequency"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "pertubed"       "perturbed"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "si"             "is"                            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "vs"             "versus"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mor"            "more"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "configing"      "configuring"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aume"           "as you might expect"           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ayme"           "as you might expect"           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tss"            "timestamps"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ts"             "timestamp"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "obj"            "object"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "oop"            "object-oriented-programming"   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ood"            "object-oriented-design"        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hwat"           "what"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sep"            "separate"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "utube"          "youtube"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hav"            "have"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ootq"           "out of the question"           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tte"            "to this end"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wasnt"          "was not"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ult"            "ultimate"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ultl"           "ultimately"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aia"            "all in all"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "soly"           "solely"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "idwt"           "I do not want to"              nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "coll"           "collection"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hadnt"          "had not"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "suces"          "success"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sucess"         "success"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "accros"         "across"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "resonable"      "reasonable"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sec"            "second"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "secs"           "seconds"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "reco"           "recommended"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sth"            "something"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ath"            "anything"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "corsor"         "cursor"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sdb"            "should not be"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rihgt"          "right"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "shdnt"          "should not"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aycs"           "as you can see"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "twisi"          "the way I see it"              nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fnr"            "for no reason"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mk"             "make"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "prases"         "phrases"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "thse"           "these"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lang"           "language"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "english"        "English"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nuf"            "enough"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "idek"           "I did not even know"           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cur"            "current"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "curr"           "current"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "onl"            "only"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "uve"            "you have"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "revaled"        "re-evaluated"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "idid"           "I did"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tres"           "interesting"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ml"             "modeline"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; ("def"                                          "definitely")
(define-abbrev global-abbrev-table "docs"           "documentation"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "doc"            "documentation"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nfo"            "information"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "info"           "information"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "correclty"      "correctly"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "coudl"          "could"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "oofone"         "O(1)"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "iml"            "immediately"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "theyre"         "they are"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "punc"           "punctuation"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dling"          "downloading"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ez"             "easy"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fol"            "follow"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "popl"           "populate"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "als"            "autoloads"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "alo"            "autoload"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ootw"           "out of the way"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "gen"            "generate"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aloads"         "autoloads"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "alods"          "autoloads"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dls"            "downloads"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lize"           "realize"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hwo"            "how"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tbe"            "to be exact"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "chars"          "characters"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "heres"          "here is"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hesi"           "hesitant"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ex"             "example"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "xample"         "example"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cna"            "can"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ord"            "order"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cate"           "category"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nyt"            "anything"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mena"           "mean"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "doin"           "doing"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "na"             "an"                            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "somethig"       "something"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "iac"            "in any case"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "di"             "do it"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "intro"          "introduction"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tha"            "that"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "char"           "character"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wt"             "want to"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hava"           "have a"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "deflt"          "default"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fname"          "filename"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ta"             "that"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "itl"            "it will"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "itll"           "it will"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mott"           "most of the time"              nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sd"             "should"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "shd"            "should"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "emacs"          "Emacs"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "alot"           "a lot"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "moro"           "moreover"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "orig"           "original"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "iat"            "in addition to"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "elisp"          "emacs-lisp"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "idl"            "I do not like"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; "id" is actually a word, but I use it so infrequently and I use the phrase I
;; would so frequently that it is worth having it be an abbrev for I.
;; ("wm"                                           "which")
(define-abbrev global-abbrev-table "prec"           "precedence"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wdimbt"         "what do I mean by this"        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wdim"           "what do I mean"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "awn"            "also worth noting"             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "int"            "I need to"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wch"            "which"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ch"             "which"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "igts"           "I have got to say"             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ihtbs"          "it has to be said"             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wd"             "would"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "freql"          "frequently"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ifreql"         "infrequently"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "infreql"        "infrequently"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "id"             "I would"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wan"            "want"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "idht"           "I do not have to"              nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hvae"           "have"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cann"           "cannot"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "icj"            "I can just"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ic"             "I can"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ure"            "you are"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lhp"            "Luis Henriquez-Perez"          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "noly"           "not only"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "specy"          "specifically"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rl"             "really"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "args"           "arguments"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ppl"            "people"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "o"              "of"                            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "urself"         "yourself"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ab"             "about"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ret"            "return"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tn"             "then"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "blv"            "believe"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nto"            "not"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mone"           "money"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hve"            "have"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "m"              "my"                            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "swich"          "switch"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "actuall"        "actually"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "evalt"          "evaluate"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "asap"           "A.S.A.P."                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "econf"          "emacs configuration"           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "alth"           "although"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "esp"            "especially"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; This clashes with the word "ill" but I barely use that word.  In the rare
;; event where I do need to use it I will unexpand it.
(define-abbrev global-abbrev-table "ill"            "I will"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; This is a common abbrev for "by the way" but I feel like I do not really use
;; that phrase unless I am texting.
(define-abbrev global-abbrev-table "imd"            "immediately"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "exand"          "expand"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ppet"           "snippet"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tse"            "these"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "usu"            "usually"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "iprac"          "in practice"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "efy"            "efficiency"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "evr"            "everything"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sen"            "seen"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wat"            "what"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dfl"            "default"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dflt"           "default"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "difr"           "differ"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "btw"            "between"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dif"            "difference"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "diff"           "difference"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "htat"           "that"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rnt"            "are not"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "arent"          "are not"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tt"             "the"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "len"            "length"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bf"             "before"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "af"             "after"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "oft"            "often"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dsnt"           "does not"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ihb"            "I had been"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "comptia"        "CompTIA"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "gt"             "get"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wev"            "whatever"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "jbos"           "jobs"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "theyll"         "they will"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "prevl"          "previously"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "prev"           "previous"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ivs"            "I have seen"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rxp"            "regular expression"            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rx"             "regular expression"            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dl"             "download"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "vc"             "version control"               nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wil"            "will"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "shiftk"         "SHIFT"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nots"           "number of times"               nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "num"            "number"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "f"              "of"                            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lins"           "lines"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; I thought that this could be a bad abbrev because it is too much line a
;; spelling mistake of =the=, but then I thought if I do misspell "the" it is
;; very unlikely I will do so by pressing =t= again.
(define-abbrev global-abbrev-table "tht"            "thought"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "i"              "I"                             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "luis"           "Luis"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; This will not work because ";" is not a work constituent.  I need to use
;; `aas' for this or come up with some other solution.
;; (";;"                                           ".")
;; TODO: move to spell-fixing abbrev.
(define-abbrev global-abbrev-table "ivb"            "I have been"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "werent"         "were not"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rly"            "really"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aagp"           "at any given point"            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "begn"           "beginning"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "idt"            "I do not think"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "arent"          "are not"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ting"           "thing"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ned"            "need"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dir"            "directory"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ull"            "you will"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "spst"           "supposed"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hv"             "have"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "desiding"       "deciding"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "pkgs"           "packages"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "pkg"            "package"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ftmp"           "for the most part"             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "readme"         "README"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "sdnt"           "should not"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cme"            "come"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "imed"           "immediately"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cesly"          "successfully"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "owoto"          "one way or the other"          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "configs"        "configurations"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "espace"         "escape"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ijwi"           "I just want it"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ijw"            "I just want"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "idw"            "I do not want"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ij"             "I just"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "unesy"          "unnecessarily"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "unes"           "unnecessary"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "nes"            "necessary"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bec"            "because"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "aswer"          "answer"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dlk"            "do not like"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tho"            "though"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "idkw"           "I do not know why"             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "damw"           "do not ask me why"             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "idlk"           "I do not like"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ilk"            "I like"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "auly"           "automatically"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dsl"            "Domain-Specific-Language"      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fn"             "function"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fns"            "functions"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ig"             "instagram"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "econf"          "emacs configuration"           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "kbdm"           "keyboard macro"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "kbdms"          "keyboard macros"               nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "msw"            "Microsoft Windows"             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table ".mail"          "luis@luishp.xyz"               nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "imho"           "in my humble opinion"          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "imo"            "in my opinion"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fyi"            "for your information"          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lmk"            "let me know"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "afaik"          "as far as I know"              nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "idk"            "I do not know"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "gonna"          "going to"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "otc"            "on the contrary"               nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "st"             "sometimes"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tbh"            "to be honest"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "qwerty"         "QWERTY"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ngl"            "not going to lie"              nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tfb"            "to be frank"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ndo"            "window"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "tis"            "it is"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "amly"           "automatically"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "rn"             "right now"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bly"            "probably"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "lk"             "like"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; I want the word =config= to stay the same too much for this to be useful.
;; Right now it is frankly more of an impediment for me than something that
;; helps me.
(define-abbrev global-abbrev-table "questioin"      "question"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ur"             "your"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wiht"           "with"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ith"            "with"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "abilit"         "ability"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ko"             "K.O."                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dat"            "that"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "incc"           "increase"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "incs"           "increase"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "decs"           "deccrease"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; TODO: Add a condition preventng it from expanding if I am writing a file path.
(define-abbrev global-abbrev-table "config"         "configuration"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "obv"            "obviously"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "appr"           "appropriate"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ofc"            "of course"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ok"             "O.K."                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "iis"            "it's"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "bc"             "because"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "iow"            "in other words"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "uun"            "up until now"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "exwm"           "EXWM"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fe"             "for example"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "evaled"         "evaluated"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "imma"           "I am going to"                 nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; From https://sachachua.com/blog/2015/01/developing-emacs-micro-habits-text-automation/
(define-abbrev global-abbrev-table "iwt"            "I want to"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hw"             "however"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ths"            "this"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "otoh"           "on the one hand"               nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "otth"           "on the other hand"             nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "kinda"          "kind of"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ohter"          "other"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fe"             "for example"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fi"             "for instance"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "youve"          "you have"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "youd"           "you would"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "il"             "I will"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "theres"         "there is"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "itss"           "it is"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "im"             "I am"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "illl"           "I will"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "cant"           "cannot"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "idd"            "ID"                            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dont"           "do not"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wontt"          "will not"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "doesnt"         "does not"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; Not sure I actually want this abbrev because =wont= is actually a word.
(define-abbrev global-abbrev-table "ine"            "one"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "mispelling"     "misspelling"                   nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ry"             "very"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wont"           "will not"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "thats"          "that is"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "u"              "you"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ul"             "you'll"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dont"           "do not"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dnt"            "don't"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wo"             "without"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ive"            "I have"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ik"             "I know"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "plx"            "complex"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ribe"           "describe"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "iff"            "if and only if"                nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "addd"           "additionally"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "weve"           "we have"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "whats"          "what is"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "havent"         "have not"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "didnt"          "did not"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "shouldnt"       "should not"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "isnt"           "is not"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fo"             "of"                            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ud"             "you would"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fwis"           "from what I see"               nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fwiu"           "from what I understand"        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "youre"          "you are"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wouldnt"        "would not"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "woudnt"         "would not"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "coudnt"         "could not"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "couldnt"        "could not"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;; These abbrevs are focused on spelling mistakes.
;; Here I focus on fixing unambiguous spelling mistakes.
(define-abbrev global-abbrev-table "onw"            "own"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "frst"           "first"                         nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "edting"         "editing"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "alread"         "already"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "htats"          "that is"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "whehther"       "whether"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "somehting"      "something"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "hte"            "the"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "te"             "the"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "th"             "the"                           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "ot"             "to"                            nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "wnat"           "want"                          nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "stoped"         "stopped"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "capfs"          "completion-at-point-functions" nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "suprise"        "surprise"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "functoin"       "function"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "refect"         "reflect"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dint"           "did not"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "orignal"        "original"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "eachother"      "each other"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dn"             "do not"                        nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dsn"            "does not"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "fsr"            "for some reason"               nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "propogate"      "propagate"                     nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "pakcage"        "package"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "pakcages"       "packages"                      nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "motn"           "more often than not"           nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "itc"            "in that case"                  nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "probl"          "problem"                       nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
(define-abbrev global-abbrev-table "dered"          "considered"                    nil :enable-function #'+abbrev-enable-plain-text-abbrevs-p)
;;; provide
(provide '+abbrev-plain-text-abbrevs)
;;; +abbrev-plain-text-abbrevs.el ends here

#+AUTHOR: Luis Henriquez-Perez
#+begin_html
<h1 align="center">Dotfiles</h1>
#+end_html
#+CAPTION: My typical destop environment display
[[file:Pictures/awesomewm-showcase_20241217_160959.png]]
# although it looks cool with the tiling I am not convinced
* Principles
- *keep it simple*
- *ease of setup*
  I should be able to setup my dotfiles with a single command.
- *thorough documentation*
  Setting up these dotfiles was hard for me to do.  I want to
  help others reading set up their own dotfiles and to do that.  Also I want to
  remember things that I myself did.
** Featured Programs
- *Dotfile Management*: git I manage my dotfiles using a [[https://www.atlassian.com/git/tutorials/dotfiles][bare git repo]].  Compared to
  existing solutions--namely [[https://yadm.io/][yadm]], [[https://www.gnu.org/software/stow/][gnu stow]] and [[https://www.chezmoi.io/][chezmoi]]--it requires no
  dependencies besides git, it does not use symlinks, and it is overall much
  simpler.  It is major drawback is it is more difficult to use tools that
  integrate with.
- *Window Manager*: [[https://awesomewm.org/][awesomewm]]
  At first I was using stumpwm and I have got to say I do love lisp,
  but stumpwm was a bit slow and in fact the first two weeks I used it it
  crashed at least 5 times.  In any case, awesomewm is lightweight it is fast,
  it is written in a real programming language and it is extremely customizable.
  [[https://stumpwm.github.io/][stumpwm]] As I have mentioned I am attracted to customizable applications and
  Particularly ones written in lisp.  In this sense.
- *Editor*:
  [[Https://www.gnu.org/software/emacs/][Emacs]] is my editor (see my [[file:./dot_config/emacs/README.org][dedicated README]]).  Emacs is the "centerpice" of my
  configuration.  It is my most configured package.
** Designated Operating System
I use [[https://archlinux.org/][archlinux]] as my operating system.
** How To Initialize Dotfiles (NOT YET WORKING)
+Run the following command which will download the =dotinit.sh= script and run it.+
The =dotinit.sh= clones my dotfiles as a bare git repo and attempts to propagate
the files on my dotfiles to the home directory via ~git checkout~.  If ~git
checkout~ fails due because of files that would be overwritten by doing this
checkout, then.
Currently, the script has a few problems:
1. One is it does not create a unique directory to backup the file that would., so on the off-chance there is an existing
directory of the same name, it will add the files to that directory.  The other problem is that it
reads from the error message.
#+begin_src bash
curl -sSL https://github.com/Luis-Henriquez-Perez/dotfiles/raw/master--bare-repo/dotinit.sh | bash
#+end_src
